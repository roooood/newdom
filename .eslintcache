[{"D:\\aref\\domino\\src\\index.js":"1","D:\\aref\\domino\\src\\App.js":"2","D:\\aref\\domino\\src\\reportWebVitals.js":"3","D:\\aref\\domino\\src\\helper.js":"4","D:\\aref\\domino\\src\\context.js":"5","D:\\aref\\domino\\src\\stack.js":"6","D:\\aref\\domino\\src\\simi.js":"7","D:\\aref\\domino\\src\\tiles.js":"8","D:\\aref\\domino\\src\\start.js":"9","D:\\aref\\domino\\src\\animate.js":"10","D:\\aref\\domino\\src\\similate.js":"11","D:\\aref\\domino\\src\\board.js":"12"},{"size":434,"mtime":1607996120680,"results":"13","hashOfConfig":"14"},{"size":411,"mtime":1607900781627,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1606734105645,"results":"16","hashOfConfig":"14"},{"size":2993,"mtime":1608219128211,"results":"17","hashOfConfig":"14"},{"size":2458,"mtime":1608219217201,"results":"18","hashOfConfig":"14"},{"size":2254,"mtime":1608217353802,"results":"19","hashOfConfig":"14"},{"size":1496,"mtime":1607903477786,"results":"20","hashOfConfig":"14"},{"size":1231,"mtime":1607903417197,"results":"21","hashOfConfig":"14"},{"size":697,"mtime":1608140791282,"results":"22","hashOfConfig":"14"},{"size":1211,"mtime":1607997882874,"results":"23","hashOfConfig":"14"},{"size":2028,"mtime":1607903728116,"results":"24","hashOfConfig":"14"},{"size":2536,"mtime":1608218398856,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15iz1xf",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"D:\\aref\\domino\\src\\index.js",[],["61","62"],"D:\\aref\\domino\\src\\App.js",["63","64"],"import React, { useEffect, useState } from 'react';\nimport { StoreContextProvider } from './context';\nimport { AnimateContextProvider } from './animate';\nimport Similate from './similate';\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <StoreContextProvider >\n      <AnimateContextProvider >\n        <Similate />\n      </AnimateContextProvider>\n    </StoreContextProvider>\n\n  );\n}\n\n\nexport default App;\n",["65","66"],"D:\\aref\\domino\\src\\reportWebVitals.js",[],["67","68"],"D:\\aref\\domino\\src\\helper.js",["69","70","71","72","73","74","75"],"D:\\aref\\domino\\src\\context.js",["76","77","78","79"],"import React, { useReducer, createContext } from \"react\";\r\nimport { equal, include } from './helper';\r\n\r\nexport const storeContext = createContext();\r\n\r\nconst simi = Array.from({ length: 28 }, () => true);\r\nconst initialState = {\r\n    simi,\r\n    deck: {\r\n        me: [],\r\n        opponet: []\r\n    },\r\n    dices: [],\r\n    board: [],\r\n    selected: [],\r\n    index: -1,\r\n    turn: '',\r\n    picker: false,\r\n    width: null,\r\n    height: null,\r\n    moveable: [],\r\n};\r\n\r\nconst reducer = (state, { type, data }) => {\r\n    switch (type) {\r\n        case 'all': {\r\n            return { ...state, ...data };\r\n        }\r\n        case 'temp-board': {\r\n            state.selected = data;\r\n            return { ...state };\r\n        }\r\n        case 'board': {\r\n            if (!state.board.find(e => equal(data, e))) {\r\n                state.board.push(data);\r\n                state.selected = [];\r\n                state.deck['me'] = state.deck['me'].filter(e => !equal(data, e));\r\n                if (!state.moveable.length) {\r\n                    state.moveable = data;\r\n                }\r\n                else {\r\n                    // state.moveable\r\n                }\r\n                console.log(state.moveable)\r\n            }\r\n            return { ...state };\r\n        }\r\n        case 'anim': {\r\n            let [index, turn, val] = data;\r\n            state.index = index;\r\n            state.turn = turn;\r\n            state.simi[index] = turn == 'me' ? val : true;\r\n            return { ...state };\r\n        }\r\n        case 'index': {\r\n            let [index, turn] = data;\r\n            if (state.dices[index] != null) {\r\n                state.index = index;\r\n                state.turn = turn;\r\n                state.simi[index] = turn == 'me' ? state.dices[index] : true;\r\n                state.dices[index] = null;\r\n            }\r\n            return { ...state };\r\n        }\r\n        case 'deck': {\r\n            let tmp = state.simi[state.index];\r\n            if (tmp) {\r\n                state.deck[state.turn].push(tmp);\r\n                state.simi[state.index] = false;\r\n                state.index = -1;\r\n            }\r\n            return { ...state };\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const StoreContextProvider = props => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <storeContext.Provider value={[state, dispatch]}>\r\n            {props.children}\r\n        </storeContext.Provider>\r\n    );\r\n};","D:\\aref\\domino\\src\\stack.js",["80","81","82","83","84","85","86","87"],"D:\\aref\\domino\\src\\simi.js",["88","89","90","91","92"],"import React, { createRef, useContext, useEffect, useMemo } from 'react';\r\nimport { storeContext } from './context';\r\nimport { animateContext } from './animate';\r\nimport tiles from './tiles';\r\nimport { chunk } from './helper';\r\n\r\nfunction Simi() {\r\n    const [{ simi, index, picker }, dispatch] = useContext(storeContext);\r\n    const { from } = useContext(animateContext);\r\n\r\n    const anim = (i) => {\r\n        dispatch({ type: 'index', data: [i, 'me'] });\r\n    }\r\n\r\n    const list = chunk(simi, 14);\r\n    return (\r\n\r\n        <div className={\"simi \" + (picker ? 'active' : '')}>\r\n            {list.map((items, i) =>\r\n                <div className={\"simi-row\"} key={i}>\r\n                    {items.map((item, j) => {\r\n                        let count = (i * 14) + j;\r\n                        let boll = Boolean(item)\r\n                        return (\r\n                            <div className={\"simi-col \" + (boll ? '' : 'used')} key={j}  >\r\n                                {boll &&\r\n                                    <img\r\n                                        ref={index == count ? from : null}\r\n                                        onClick={() => anim(count)}\r\n                                        className=\"abs\" src={item === true ? tiles() : tiles(item)}\r\n                                    />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Simi;","D:\\aref\\domino\\src\\tiles.js",["93"],"\r\nconst tiles = {\r\n    '0-0': require('./img/0-0.png'),\r\n    '1-0': require('./img/1-0.png'),\r\n    '1-1': require('./img/1-1.png'),\r\n    '2-0': require('./img/2-0.png'),\r\n    '2-1': require('./img/2-1.png'),\r\n    '2-2': require('./img/2-2.png'),\r\n    '3-0': require('./img/3-0.png'),\r\n    '3-1': require('./img/3-1.png'),\r\n    '3-2': require('./img/3-2.png'),\r\n    '3-3': require('./img/3-3.png'),\r\n    '4-0': require('./img/4-0.png'),\r\n    '4-1': require('./img/4-1.png'),\r\n    '4-2': require('./img/4-2.png'),\r\n    '4-3': require('./img/4-3.png'),\r\n    '4-4': require('./img/4-4.png'),\r\n    '5-0': require('./img/5-0.png'),\r\n    '5-1': require('./img/5-1.png'),\r\n    '5-2': require('./img/5-2.png'),\r\n    '5-3': require('./img/5-3.png'),\r\n    '5-4': require('./img/5-4.png'),\r\n    '5-5': require('./img/5-5.png'),\r\n    '6-0': require('./img/6-0.png'),\r\n    '6-1': require('./img/6-1.png'),\r\n    '6-2': require('./img/6-2.png'),\r\n    '6-3': require('./img/6-3.png'),\r\n    '6-4': require('./img/6-4.png'),\r\n    '6-5': require('./img/6-5.png'),\r\n    '6-6': require('./img/6-6.png'),\r\n    'blank': require('./img/blank.png')\r\n}\r\nexport default (item = null) => item == null ? tiles['blank']?.default : tiles[item.join('-')]?.default;",["94","95"],"D:\\aref\\domino\\src\\start.js",[],["96","97"],"D:\\aref\\domino\\src\\animate.js",[],"D:\\aref\\domino\\src\\similate.js",["98","99","100"],"import React, { useEffect, useContext, useRef } from 'react';\r\nimport Stack from './stack';\r\nimport Simi from './simi';\r\nimport Board from './board';\r\nimport { storeContext } from './context';\r\nimport { animateContext } from './animate';\r\n\r\nimport initialData from './start';\r\nimport { getPositionAtCenter } from './helper';\r\nconst { simi, deck, dices } = initialData();\r\n\r\nexport default (props) => {\r\n    const [{ index }, dispatch] = useContext(storeContext);\r\n    const { start } = useContext(animateContext);\r\n    const board = useRef(null);\r\n\r\n    const pick = (me, opponet) => {\r\n        if (me.length >= opponet.length) {\r\n            return ['me', me.pop()]\r\n        }\r\n        else {\r\n            return ['opponet', opponet.pop()]\r\n        }\r\n    }\r\n    const animate = () => {\r\n        const ind = simi.findIndex(e => e === false);\r\n        if (ind >= 0) {\r\n            const [type, val] = pick(deck[0], deck[1]);\r\n            dispatch({ type: 'anim', data: [ind, type, val] });\r\n            simi[ind] = true;\r\n        }\r\n        else {\r\n            dispatch({ type: 'all', data: { picker: false, board: [] } });\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const { width, height } = getPositionAtCenter(board.current);\r\n        dispatch({ type: 'all', data: { dices, picker: true, width, height } });\r\n        setTimeout(() => {\r\n            animate();\r\n        }, 500);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (index >= 0) {\r\n            start(400)\r\n                .then(() => {\r\n                    dispatch({ type: 'deck' });\r\n                    animate();\r\n                })\r\n        }\r\n    }, [index]);\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"stack\">\r\n                <Stack type=\"opponet\" />\r\n            </div>\r\n            <div className=\"board\" ref={board}>\r\n                <Board />\r\n            </div>\r\n            <div className=\"stack\">\r\n                <Stack type=\"me\" />\r\n            </div>\r\n            <Simi />\r\n        </div>\r\n    )\r\n};\r\n","D:\\aref\\domino\\src\\board.js",["101","102","103","104","105","106","107","108","109","110","111"],"import React, { createRef, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { storeContext } from './context';\r\nimport { animateContext } from './animate';\r\nimport tiles from './tiles';\r\nimport { equal } from './helper';\r\n\r\nfunction Board() {\r\n    const { to, start } = useContext(animateContext);\r\n    const [{ board, selected, width: w, height: h }, dispatch] = useContext(storeContext);\r\n    const width = Math.min(Math.round(w / 25), 34);\r\n    const fullWidth = width * 2;\r\n    const halfWidth = width / 2 + 1;\r\n    const [selectedTo, setSelectedTo] = useState(null);\r\n    const [p, setPrev] = useState(0);\r\n    let prev = 0;\r\n    const temp = [...board];\r\n    if (selected.length > 0) {\r\n        if (board.length == 0) {\r\n            temp.push(selected)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (selectedTo != null)\r\n            start({ transform: 'rotate(' + selectedTo[1] + 'deg)', center: false })\r\n                .then(() => {\r\n                    dispatch({ type: 'board', data: selectedTo[0] });\r\n                    setSelectedTo(null);\r\n                })\r\n    }, [selectedTo]);\r\n\r\n    useEffect(() => {\r\n        if (temp.length > 1)\r\n            setPrev(prev)\r\n    }, [temp.length]);\r\n\r\n    const renderDice = (item, i) => {\r\n        let same = item[0] == item[1];\r\n        let rotate = same ? 0 : 90;\r\n        let transform = 'translateX(' + ((same && prev) ? prev - halfWidth + 1 : prev) + 'px) rotate(' + rotate + 'deg)';\r\n        prev += (same ? (prev == 0 ? width + halfWidth : width + 1) : fullWidth);\r\n        if (equal(selected, item)) {\r\n            return (\r\n                <div\r\n                    key={i}\r\n                    ref={equal(selectedTo?.[0] ?? [], item) ? to : null}\r\n                    className={\"abs selected \"}\r\n                    style={{ transform, width, height: width * 2 - 2 }}\r\n                    onClick={() => setSelectedTo([item, rotate])}\r\n                >\r\n                    <img src={tiles(item)} />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <img\r\n                key={i}\r\n                className={\"abs\"}\r\n                style={{ transform, width }}\r\n                src={tiles(item)}\r\n            />\r\n        )\r\n    }\r\n    let transform = 'translateX(' + (p / 2.25) + 'px)';\r\n    return (\r\n        <div\r\n            className={\"board-dir\"}\r\n        // style={{ transform }}\r\n        >\r\n            {w && temp.map((item, i) => renderDice(item, i))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Board;",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"120","line":1,"column":28,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"112","replacedBy":"121"},{"ruleId":"114","replacedBy":"122"},{"ruleId":"112","replacedBy":"123"},{"ruleId":"114","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":8,"column":28,"nodeType":"127","messageId":"128","endLine":8,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":15,"column":15,"nodeType":"127","messageId":"128","endLine":15,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":25,"column":48,"nodeType":"127","messageId":"128","endLine":25,"endColumn":50},{"ruleId":"125","severity":1,"message":"126","line":80,"column":18,"nodeType":"127","messageId":"128","endLine":80,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":80,"column":34,"nodeType":"127","messageId":"128","endLine":80,"endColumn":36},{"ruleId":"125","severity":1,"message":"129","line":83,"column":22,"nodeType":"127","messageId":"128","endLine":83,"endColumn":24},{"ruleId":"125","severity":1,"message":"129","line":85,"column":22,"nodeType":"127","messageId":"128","endLine":85,"endColumn":24},{"ruleId":"116","severity":1,"message":"130","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":25,"column":5,"nodeType":"133","messageId":"134","endLine":74,"endColumn":6},{"ruleId":"125","severity":1,"message":"126","line":52,"column":38,"nodeType":"127","messageId":"128","endLine":52,"endColumn":40},{"ruleId":"125","severity":1,"message":"126","line":60,"column":42,"nodeType":"127","messageId":"128","endLine":60,"endColumn":44},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"120","line":1,"column":28,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":26,"column":35,"nodeType":"127","messageId":"128","endLine":26,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":28,"column":33,"nodeType":"137","endLine":34,"endColumn":35},{"ruleId":"135","severity":1,"message":"136","line":35,"column":35,"nodeType":"137","endLine":35,"endColumn":87},{"ruleId":"125","severity":1,"message":"126","line":39,"column":42,"nodeType":"127","messageId":"128","endLine":39,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":41,"column":29,"nodeType":"137","endLine":41,"endColumn":113},{"ruleId":"125","severity":1,"message":"126","line":41,"column":55,"nodeType":"127","messageId":"128","endLine":41,"endColumn":57},{"ruleId":"116","severity":1,"message":"138","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":1,"column":40,"nodeType":"118","messageId":"119","endLine":1,"endColumn":49},{"ruleId":"116","severity":1,"message":"139","line":1,"column":51,"nodeType":"118","messageId":"119","endLine":1,"endColumn":58},{"ruleId":"135","severity":1,"message":"136","line":27,"column":37,"nodeType":"137","endLine":31,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":28,"column":52,"nodeType":"127","messageId":"128","endLine":28,"endColumn":54},{"ruleId":"140","severity":1,"message":"141","line":33,"column":1,"nodeType":"142","endLine":33,"endColumn":105},{"ruleId":"112","replacedBy":"143"},{"ruleId":"114","replacedBy":"144"},{"ruleId":"112","replacedBy":"145"},{"ruleId":"114","replacedBy":"146"},{"ruleId":"140","severity":1,"message":"141","line":12,"column":1,"nodeType":"142","endLine":70,"endColumn":3},{"ruleId":"147","severity":1,"message":"148","line":44,"column":8,"nodeType":"149","endLine":44,"endColumn":10,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":54,"column":8,"nodeType":"149","endLine":54,"endColumn":15,"suggestions":"152"},{"ruleId":"116","severity":1,"message":"138","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"139","line":1,"column":51,"nodeType":"118","messageId":"119","endLine":1,"endColumn":58},{"ruleId":"116","severity":1,"message":"153","line":9,"column":49,"nodeType":"118","messageId":"119","endLine":9,"endColumn":50},{"ruleId":"125","severity":1,"message":"126","line":18,"column":26,"nodeType":"127","messageId":"128","endLine":18,"endColumn":28},{"ruleId":"147","severity":1,"message":"154","line":29,"column":8,"nodeType":"149","endLine":29,"endColumn":20,"suggestions":"155"},{"ruleId":"147","severity":1,"message":"156","line":34,"column":8,"nodeType":"149","endLine":34,"endColumn":21,"suggestions":"157"},{"ruleId":"125","severity":1,"message":"126","line":37,"column":28,"nodeType":"127","messageId":"128","endLine":37,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":40,"column":31,"nodeType":"127","messageId":"128","endLine":40,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":50,"column":21,"nodeType":"137","endLine":50,"endColumn":46},{"ruleId":"135","severity":1,"message":"136","line":55,"column":13,"nodeType":"137","endLine":60,"endColumn":15},{"ruleId":"116","severity":1,"message":"158","line":63,"column":9,"nodeType":"118","messageId":"119","endLine":63,"endColumn":18},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["159"],["160"],["159"],["160"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'include' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createRef' is defined but never used.","'useMemo' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["159"],["160"],["159"],["160"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'animate' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["161"],"React Hook useEffect has missing dependencies: 'animate', 'dispatch', and 'start'. Either include them or remove the dependency array.",["162"],"'h' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'start'. Either include them or remove the dependency array.",["163"],"React Hook useEffect has a missing dependency: 'prev'. Either include it or remove the dependency array.",["164"],"'transform' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [animate, dispatch]",{"range":"173","text":"174"},"Update the dependencies array to be: [animate, dispatch, index, start]",{"range":"175","text":"176"},"Update the dependencies array to be: [dispatch, selectedTo, start]",{"range":"177","text":"178"},"Update the dependencies array to be: [prev, temp.length]",{"range":"179","text":"180"},[1400,1402],"[animate, dispatch]",[1632,1639],"[animate, dispatch, index, start]",[1106,1118],"[dispatch, selectedTo, start]",[1211,1224],"[prev, temp.length]"]