[{"D:\\aref\\domino\\src\\index.js":"1","D:\\aref\\domino\\src\\App.js":"2","D:\\aref\\domino\\src\\reportWebVitals.js":"3","D:\\aref\\domino\\src\\helper.js":"4","D:\\aref\\domino\\src\\context.js":"5","D:\\aref\\domino\\src\\stack.js":"6","D:\\aref\\domino\\src\\simi.js":"7","D:\\aref\\domino\\src\\tiles.js":"8","D:\\aref\\domino\\src\\start.js":"9","D:\\aref\\domino\\src\\animate.js":"10","D:\\aref\\domino\\src\\similate.js":"11","D:\\aref\\domino\\src\\board.js":"12","D:\\aref\\domino\\src\\dices.js":"13"},{"size":434,"mtime":1607996120680,"results":"14","hashOfConfig":"15"},{"size":411,"mtime":1607900781627,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606734105645,"results":"17","hashOfConfig":"15"},{"size":3205,"mtime":1608299555505,"results":"18","hashOfConfig":"15"},{"size":2790,"mtime":1608672477747,"results":"19","hashOfConfig":"15"},{"size":2705,"mtime":1608599496435,"results":"20","hashOfConfig":"15"},{"size":1497,"mtime":1608296525764,"results":"21","hashOfConfig":"15"},{"size":1358,"mtime":1608298791388,"results":"22","hashOfConfig":"15"},{"size":697,"mtime":1608577375831,"results":"23","hashOfConfig":"15"},{"size":1211,"mtime":1607997882874,"results":"24","hashOfConfig":"15"},{"size":2319,"mtime":1608591532163,"results":"25","hashOfConfig":"15"},{"size":1074,"mtime":1608671014394,"results":"26","hashOfConfig":"15"},{"size":3202,"mtime":1608672643779,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15iz1xf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\aref\\domino\\src\\index.js",[],["66","67"],"D:\\aref\\domino\\src\\App.js",["68","69"],"import React, { useEffect, useState } from 'react';\nimport { StoreContextProvider } from './context';\nimport { AnimateContextProvider } from './animate';\nimport Similate from './similate';\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <StoreContextProvider >\n      <AnimateContextProvider >\n        <Similate />\n      </AnimateContextProvider>\n    </StoreContextProvider>\n\n  );\n}\n\n\nexport default App;\n",["70","71"],"D:\\aref\\domino\\src\\reportWebVitals.js",[],["72","73"],"D:\\aref\\domino\\src\\helper.js",["74","75","76","77","78","79","80","81","82","83"],"\n\n\nexport function equal(a, b) {\n    if (!a.length)\n        return false;\n    if (a[0] == a[1])\n        return b[0] == a[0] && b[1] == a[1];\n    return a.every(e => b.includes(e))\n}\nexport function include(a, b, isNull = true) {\n    if (isNull && a.length == 0)\n        return true;\n    if (Array.isArray(b[0])) {\n        return a.some(e => b.findIndex(d => d.includes(e)) >= 0)\n    }\n    return a.some(e => b?.includes(e))\n}\nexport function clone(arr) {\n    let newObj = (arr instanceof Array) ? [] : {};\n    for (let i in arr) {\n        if (i == 'clone')\n            continue;\n        if (arr[i] && typeof arr[i] == \"object\") {\n            newObj[i] = clone(arr[i]);\n        }\n        else\n            newObj[i] = arr[i]\n    } return newObj;\n};\nexport function toMoney(amount) {\n    if (typeof amount == 'undefined' || amount == 'null')\n        return '';\n    if (amount.length < 2)\n        return amount + '';\n    return (\"\" + amount).replace(/,/g, '').replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\")\n}\nexport function toggle(collection, item) {\n    let temp = clone(collection)\n    var idx = temp.indexOf(item);\n    if (idx !== -1) {\n        temp.splice(idx, 1);\n    } else {\n        temp.push(item);\n    }\n    return temp;\n}\n\nexport function chunk(arr, len) {\n    var chunks = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        chunks.push(arr.slice(i, i += len));\n    }\n\n    return chunks;\n}\nexport const pick = (obj, keys) => {\n    const tmp = {};\n    for (let i of keys) {\n        tmp[i] = obj[i]\n    }\n    return tmp;\n};\nexport const colorize = (str) => {\n    let i = 0, hash = 0, color = '';\n    for (i = 0, hash = 0; i < str.length; hash = str.charCodeAt(i++) + ((hash << 5) - hash));\n    color = Math.floor(Math.abs((Math.sin(hash) * 10000) % 1 * 16777216)).toString(16);\n    return '#' + Array(6 - color.length + 1).join('0') + color;\n}\nexport const shuffle = (arr, level = 1) => {\n    var a, b, c;\n    for (a = 0; a < level; a++) {\n        for (b = arr.length - 1; b > 0; b--) {\n            c = Math.floor(Math.random() * (b + 1));\n            [arr[b], arr[c]] = [arr[c], arr[b]];\n        }\n    }\n    return arr;\n}\nexport function move(el, x, y) {\n    var xid = setInterval(xx, 5);\n\n    function xx() {\n        if (x[0] == x[1] && y[0] == y[1]) {\n            clearInterval(xid);\n        } else {\n            if (x[0] != x[1])\n                x[0] = x[0] < x[1] ? x[0] + 1 : x[0] - 1;\n            if (y[0] != y[1])\n                y[0] = y[0] < y[1] ? y[0] + 1 : y[0] - 1;\n            el.style.transform = \"translate(\" + x[0] + \"px,\" + y[0] + \"px)\";\n        }\n    }\n}\nexport function getPositionAtCenter(element) {\n    const { top, left, width, height } = element.getBoundingClientRect();\n    return {\n        x: left + width / 2,\n        y: top + height / 2,\n        width: Math.round(width),\n        height: Math.round(height),\n    };\n}\nexport function getDistance(a, b) {\n    const aPosition = getPositionAtCenter(a);\n    const bPosition = getPositionAtCenter(b);\n    let distance = Math.hypot(aPosition.x - bPosition.x, aPosition.y - bPosition.y);\n    return {\n        distance: distance,\n        x: aPosition.x - bPosition.x,\n        y: aPosition.y - bPosition.y\n    }\n}\n",["84","85"],"D:\\aref\\domino\\src\\context.js",["86","87","88","89","90","91","92"],"import React, { useReducer, createContext } from \"react\";\r\nimport { equal, include, clone } from './helper';\r\n\r\nexport const storeContext = createContext();\r\n\r\nconst simi = Array.from({ length: 28 }, () => true);\r\nconst initialState = {\r\n    simi,\r\n    deck: {\r\n        me: [],\r\n        opponet: []\r\n    },\r\n    dices: [],\r\n    board: [],\r\n    selected: [],\r\n    index: -1,\r\n    turn: '',\r\n    picker: false,\r\n    width: null,\r\n    height: null,\r\n    started: false,\r\n    moveable: [],\r\n};\r\n\r\nconst reducer = (state, { type, data }) => {\r\n    switch (type) {\r\n        case 'all': {\r\n            return { ...state, ...data };\r\n        }\r\n        case 'temp-board': {\r\n            state.selected = data;\r\n            return { ...state };\r\n        }\r\n        case 'board': {\r\n            let { item, rotate, prev = false, next = false } = data;\r\n            item = rotate > 0 ? item : [item[1], item[0]];\r\n            if (!state.board.find(e => equal(item, e.item))) {\r\n                state.board.push({ item: clone(item), prev, next });\r\n                state.selected = [];\r\n                state.deck['me'] = state.deck['me'].filter(e => !equal(item, e));\r\n                if (!state.moveable.length) {\r\n                    state.moveable = clone(item);\r\n                }\r\n                else {\r\n                    let t = next == 0 ? 0 : 1;\r\n                    state.moveable[t] = item[0] == item[1] ? item[0] : item.find(e => e != state.moveable[t]);\r\n                }\r\n                console.log('moveable', state.moveable)\r\n            }\r\n            return { ...state };\r\n        }\r\n        case 'anim': {\r\n            let [index, turn, val] = data;\r\n            state.index = index;\r\n            state.turn = turn;\r\n            state.simi[index] = turn == 'me' ? val : true;\r\n            return { ...state };\r\n        }\r\n        case 'index': {\r\n            let [index, turn] = data;\r\n            if (state.dices[index] != null) {\r\n                state.index = index;\r\n                state.turn = turn;\r\n                state.simi[index] = turn == 'me' ? state.dices[index] : true;\r\n                state.dices[index] = null;\r\n            }\r\n            return { ...state };\r\n        }\r\n        case 'deck': {\r\n            let tmp = state.simi[state.index];\r\n            if (tmp) {\r\n                state.deck[state.turn].push(tmp);\r\n                state.simi[state.index] = false;\r\n                state.index = -1;\r\n            }\r\n            return { ...state };\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const StoreContextProvider = props => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <storeContext.Provider value={[state, dispatch]}>\r\n            {props.children}\r\n        </storeContext.Provider>\r\n    );\r\n};","D:\\aref\\domino\\src\\stack.js",["93","94","95","96","97","98","99","100","101","102"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { storeContext } from './context';\r\nimport { animateContext } from './animate';\r\nimport { equal, include } from './helper';\r\nimport tiles from './tiles';\r\n\r\nfunction Stack({ type }) {\r\n    const [{ deck, selected, moveable, index, turn, width: boardWidth }, dispatch] = useContext(storeContext);\r\n    const width = type == 'me' ? Math.min(Math.max(Math.round(boardWidth / 25), 28), 40) : 22;\r\n    const { to, from } = useContext(animateContext);\r\n    const toBoard = (item) => {\r\n        dispatch({ type: 'temp-board', data: item })\r\n    }\r\n    useEffect(() => {\r\n        if (type == 'me' && moveable.length > 0) {\r\n            setTimeout(() => {\r\n                if (!(include(moveable, deck.me, false))) {\r\n                    dispatch({ type: 'all', data: { picker: true } });\r\n                }\r\n            }, 500);\r\n        }\r\n    }, [deck.me.length]);\r\n\r\n    const data = deck[type];\r\n    const temp = (index >= 0 && turn == type);\r\n    return (\r\n        <div className={\"plate \" + type}>\r\n            <div className=\"profile\">\r\n                <div className=\"image\">\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"tile\">\r\n                <div className={\"user-hand \" + type} style={{ width: (width * (data.length + (temp ? 2 : 1))) + (data.length * (type == 'me' ? 4 : -8)) }} >\r\n                    {width && data.map((item, i) =>\r\n                        <div className={\"hand-tile\"} key={item === true ? i : item.join('-')} >\r\n                            {type == 'me'\r\n                                ?\r\n                                <img\r\n                                    ref={equal(selected, item) ? from : null}\r\n                                    className={(equal(selected, item) ? 'selected ' : (include(moveable, item) ? 'can-move' : ''))}\r\n                                    style={{ width }}\r\n                                    onClick={() => include(moveable, item) ? toBoard(item) : null}\r\n                                    src={tiles(item)}\r\n                                />\r\n                                : <img style={{ width }} src={tiles()} />\r\n                            }\r\n                        </div>\r\n                    )}\r\n                    {temp &&\r\n                        <div className={\"hand-tile none\"}  >\r\n                            <img style={{ width }} ref={to} src={tiles()} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"point\">\r\n                <span>0</span>\r\n                Point\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stack;","D:\\aref\\domino\\src\\simi.js",["103","104","105","106","107"],"import React, { createRef, useContext, useEffect, useMemo } from 'react';\r\nimport { storeContext } from './context';\r\nimport { animateContext } from './animate';\r\nimport tiles from './tiles';\r\nimport { chunk } from './helper';\r\n\r\nfunction Simi() {\r\n    const [{ simi, index, picker }, dispatch] = useContext(storeContext);\r\n    const { from } = useContext(animateContext);\r\n\r\n    const anim = (i) => {\r\n        dispatch({ type: 'index', data: [i, 'me'] });\r\n    }\r\n\r\n    const list = chunk(simi, 14);\r\n    return (\r\n\r\n        <div className={\"simi \" + (picker ? 'active' : '')}>\r\n            {list.map((items, i) =>\r\n                <div className={\"simi-row\"} key={i}>\r\n                    {items.map((item, j) => {\r\n                        let count = (i * 14) + j;\r\n                        let boll = Boolean(item);\r\n                        return (\r\n                            <div className={\"simi-col \" + (boll ? '' : 'used')} key={j}  >\r\n                                {boll &&\r\n                                    <img\r\n                                        ref={index == count ? from : null}\r\n                                        onClick={() => anim(count)}\r\n                                        className=\"abs\" src={item === true ? tiles() : tiles(item)}\r\n                                    />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Simi;","D:\\aref\\domino\\src\\tiles.js",["108"],"\r\nconst tiles = {\r\n    '0-0': require('./img/0-0.png'),\r\n    '1-0': require('./img/1-0.png'),\r\n    '1-1': require('./img/1-1.png'),\r\n    '2-0': require('./img/2-0.png'),\r\n    '2-1': require('./img/2-1.png'),\r\n    '2-2': require('./img/2-2.png'),\r\n    '3-0': require('./img/3-0.png'),\r\n    '3-1': require('./img/3-1.png'),\r\n    '3-2': require('./img/3-2.png'),\r\n    '3-3': require('./img/3-3.png'),\r\n    '4-0': require('./img/4-0.png'),\r\n    '4-1': require('./img/4-1.png'),\r\n    '4-2': require('./img/4-2.png'),\r\n    '4-3': require('./img/4-3.png'),\r\n    '4-4': require('./img/4-4.png'),\r\n    '5-0': require('./img/5-0.png'),\r\n    '5-1': require('./img/5-1.png'),\r\n    '5-2': require('./img/5-2.png'),\r\n    '5-3': require('./img/5-3.png'),\r\n    '5-4': require('./img/5-4.png'),\r\n    '5-5': require('./img/5-5.png'),\r\n    '6-0': require('./img/6-0.png'),\r\n    '6-1': require('./img/6-1.png'),\r\n    '6-2': require('./img/6-2.png'),\r\n    '6-3': require('./img/6-3.png'),\r\n    '6-4': require('./img/6-4.png'),\r\n    '6-5': require('./img/6-5.png'),\r\n    '6-6': require('./img/6-6.png'),\r\n    'blank': require('./img/blank.png')\r\n}\r\nexport default (item = null) => item == null\r\n    ?\r\n    tiles['blank']?.default\r\n    :\r\n    item[0] > item[1]\r\n        ?\r\n        tiles[item[0] + '-' + item[1]]?.default\r\n        :\r\n        tiles[item[1] + '-' + item[0]]?.default;",["109","110"],"D:\\aref\\domino\\src\\start.js",[],"D:\\aref\\domino\\src\\animate.js",[],"D:\\aref\\domino\\src\\similate.js",["111","112","113"],"import React, { useEffect, useContext, useRef } from 'react';\r\nimport Stack from './stack';\r\nimport Simi from './simi';\r\nimport Board from './board';\r\nimport { storeContext } from './context';\r\nimport { animateContext } from './animate';\r\n\r\nimport initialData from './start';\r\nimport { getPositionAtCenter } from './helper';\r\nconst { simi, deck, dices } = initialData();\r\n\r\nexport default (props) => {\r\n    const [{ index, started }, dispatch] = useContext(storeContext);\r\n    const { start } = useContext(animateContext);\r\n    const board = useRef(null);\r\n\r\n    const pick = (me, opponet) => {\r\n        if (me.length >= opponet.length) {\r\n            return ['me', me.pop()]\r\n        }\r\n        else {\r\n            return ['opponet', opponet.pop()]\r\n        }\r\n    }\r\n    const animate = () => {\r\n        const ind = simi.findIndex(e => e === false);\r\n        if (ind >= 0) {\r\n            const [type, val] = pick(deck[0], deck[1]);\r\n            dispatch({ type: 'anim', data: [ind, type, val] });\r\n            simi[ind] = true;\r\n        }\r\n        else {\r\n            dispatch({ type: 'all', data: { picker: false, started: true } });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const { width, height } = getPositionAtCenter(board.current);\r\n        // dispatch({ type: 'all', data: { dices, picker: true, width, height } });\r\n        dispatch({ type: 'all', data: { dices, deck: { me: deck[0], opponet: deck[1] }, simi, width, height, started: true } });\r\n        setTimeout(() => {\r\n            // animate();\r\n        }, 500);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (index >= 0) {\r\n            start(400)\r\n                .then(() => {\r\n                    dispatch({ type: 'deck' });\r\n                    if (!started)\r\n                        animate();\r\n                    else\r\n                        dispatch({ type: 'all', data: { picker: false } });\r\n\r\n                })\r\n        }\r\n    }, [index]);\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"stack\">\r\n                <Stack type=\"opponet\" />\r\n            </div>\r\n            <div className=\"board\" ref={board}>\r\n                <Board />\r\n            </div>\r\n            <div className=\"stack\">\r\n                <Stack type=\"me\" />\r\n            </div>\r\n            <Simi />\r\n        </div>\r\n    )\r\n};\r\n","D:\\aref\\domino\\src\\board.js",["114"],"D:\\aref\\domino\\src\\dices.js",["115","116","117","118","119","120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"130","line":1,"column":28,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"122","replacedBy":"131"},{"ruleId":"124","replacedBy":"132"},{"ruleId":"122","replacedBy":"133"},{"ruleId":"124","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":7,"column":14,"nodeType":"137","messageId":"138","endLine":7,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":8,"column":21,"nodeType":"137","messageId":"138","endLine":8,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":8,"column":37,"nodeType":"137","messageId":"138","endLine":8,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":12,"column":28,"nodeType":"137","messageId":"138","endLine":12,"endColumn":30},{"ruleId":"135","severity":1,"message":"136","line":22,"column":15,"nodeType":"137","messageId":"138","endLine":22,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":32,"column":48,"nodeType":"137","messageId":"138","endLine":32,"endColumn":50},{"ruleId":"135","severity":1,"message":"136","line":87,"column":18,"nodeType":"137","messageId":"138","endLine":87,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":87,"column":34,"nodeType":"137","messageId":"138","endLine":87,"endColumn":36},{"ruleId":"135","severity":1,"message":"139","line":90,"column":22,"nodeType":"137","messageId":"138","endLine":90,"endColumn":24},{"ruleId":"135","severity":1,"message":"139","line":92,"column":22,"nodeType":"137","messageId":"138","endLine":92,"endColumn":24},{"ruleId":"122","replacedBy":"140"},{"ruleId":"124","replacedBy":"141"},{"ruleId":"126","severity":1,"message":"142","line":2,"column":17,"nodeType":"128","messageId":"129","endLine":2,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":26,"column":5,"nodeType":"145","messageId":"146","endLine":78,"endColumn":6},{"ruleId":"135","severity":1,"message":"136","line":45,"column":34,"nodeType":"137","messageId":"138","endLine":45,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":46,"column":49,"nodeType":"137","messageId":"138","endLine":46,"endColumn":51},{"ruleId":"135","severity":1,"message":"139","line":46,"column":89,"nodeType":"137","messageId":"138","endLine":46,"endColumn":91},{"ruleId":"135","severity":1,"message":"136","line":56,"column":38,"nodeType":"137","messageId":"138","endLine":56,"endColumn":40},{"ruleId":"135","severity":1,"message":"136","line":64,"column":42,"nodeType":"137","messageId":"138","endLine":64,"endColumn":44},{"ruleId":"126","severity":1,"message":"130","line":1,"column":28,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":9,"column":24,"nodeType":"137","messageId":"138","endLine":9,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":15,"column":18,"nodeType":"137","messageId":"138","endLine":15,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":22,"column":8,"nodeType":"149","endLine":22,"endColumn":24,"suggestions":"150"},{"ruleId":"135","severity":1,"message":"136","line":25,"column":38,"nodeType":"137","messageId":"138","endLine":25,"endColumn":40},{"ruleId":"135","severity":1,"message":"136","line":34,"column":134,"nodeType":"137","messageId":"138","endLine":34,"endColumn":136},{"ruleId":"135","severity":1,"message":"136","line":37,"column":35,"nodeType":"137","messageId":"138","endLine":37,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":39,"column":33,"nodeType":"153","endLine":45,"endColumn":35},{"ruleId":"151","severity":1,"message":"152","line":46,"column":35,"nodeType":"153","endLine":46,"endColumn":74},{"ruleId":"151","severity":1,"message":"152","line":52,"column":29,"nodeType":"153","endLine":52,"endColumn":77},{"ruleId":"126","severity":1,"message":"154","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":1,"column":40,"nodeType":"128","messageId":"129","endLine":1,"endColumn":49},{"ruleId":"126","severity":1,"message":"155","line":1,"column":51,"nodeType":"128","messageId":"129","endLine":1,"endColumn":58},{"ruleId":"151","severity":1,"message":"152","line":27,"column":37,"nodeType":"153","endLine":31,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":28,"column":52,"nodeType":"137","messageId":"138","endLine":28,"endColumn":54},{"ruleId":"156","severity":1,"message":"157","line":33,"column":1,"nodeType":"158","endLine":41,"endColumn":49},{"ruleId":"122","replacedBy":"159"},{"ruleId":"124","replacedBy":"160"},{"ruleId":"156","severity":1,"message":"157","line":12,"column":1,"nodeType":"158","endLine":74,"endColumn":3},{"ruleId":"147","severity":1,"message":"161","line":44,"column":8,"nodeType":"149","endLine":44,"endColumn":10,"suggestions":"162"},{"ruleId":"147","severity":1,"message":"163","line":58,"column":8,"nodeType":"149","endLine":58,"endColumn":15,"suggestions":"164"},{"ruleId":"135","severity":1,"message":"136","line":12,"column":26,"nodeType":"137","messageId":"138","endLine":12,"endColumn":28},{"ruleId":"135","severity":1,"message":"136","line":18,"column":28,"nodeType":"137","messageId":"138","endLine":18,"endColumn":30},{"ruleId":"135","severity":1,"message":"136","line":22,"column":34,"nodeType":"137","messageId":"138","endLine":22,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":25,"column":34,"nodeType":"137","messageId":"138","endLine":25,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":53,"column":44,"nodeType":"137","messageId":"138","endLine":53,"endColumn":46},{"ruleId":"151","severity":1,"message":"152","line":58,"column":21,"nodeType":"153","endLine":58,"endColumn":46},{"ruleId":"151","severity":1,"message":"152","line":63,"column":13,"nodeType":"153","endLine":68,"endColumn":15},{"ruleId":"147","severity":1,"message":"165","line":78,"column":8,"nodeType":"149","endLine":78,"endColumn":20,"suggestions":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["167"],["168"],["167"],["168"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["167"],["168"],"'include' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deck.me', 'dispatch', 'moveable', and 'type'. Either include them or remove the dependency array.","ArrayExpression",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createRef' is defined but never used.","'useMemo' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["167"],["168"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["170"],"React Hook useEffect has missing dependencies: 'animate', 'dispatch', 'start', and 'started'. Either include them or remove the dependency array.",["171"],"React Hook useEffect has missing dependencies: 'dispatch' and 'start'. Either include them or remove the dependency array.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [deck.me, deck.me.length, dispatch, moveable, type]",{"range":"181","text":"182"},"Update the dependencies array to be: [dispatch]",{"range":"183","text":"184"},"Update the dependencies array to be: [animate, dispatch, index, start, started]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, selectedTo, start]",{"range":"187","text":"188"},[912,928],"[deck.me, deck.me.length, dispatch, moveable, type]",[1547,1549],"[dispatch]",[1923,1930],"[animate, dispatch, index, start, started]",[3028,3040],"[dispatch, selectedTo, start]"]